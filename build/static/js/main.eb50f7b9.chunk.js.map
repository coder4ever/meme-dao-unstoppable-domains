{"version":3,"sources":["components/commons/CircularProgressWithLabel.js","components/tweet/tweet.js","components/post-tweet/PostTweet.js","components/images/dummy.png","components/main/main.js","components/images/noImageProfile.jpg","components/login/Login.js","components/images/logo.png","components/navBar/navbar.js","components/images/locked.png","components/profile/Profile.js","components/meme-competion/MemeCompetion.js","App.js","index.js"],"names":["CircularProgressWithLabel","props","style","height","textAlign","justifyContent","paddingTop","Box","position","display","CircularProgress","variant","width","top","left","bottom","right","alignItems","Typography","component","color","fontSize","Math","round","value","CircularStatic","useState","progress","setPogress","useEffect","timer","setInterval","prevProgress","clearInterval","protoTypes","PropTypes","number","isRequired","Tweet","posts","console","log","like","loading","Container","className","Grid","container","length","map","post","index","Card","CardHeader","avatar","Avatar","alt","src","title","author","subheader","timeCreated","CardContent","description","image","id","parseInt","likeNumber","Post","setMessage","message","createPost","setImage","onChangePicture","StylesProvider","injectFirst","paddingBottom","item","xs","sm","noValidate","autoComplete","TextField","fullWidth","placeholder","defaultValue","onChange","e","target","multiline","minRows","required","URL","createObjectURL","htmlFor","IconButton","PhotoCamera","accept","type","Button","size","onClick","client","SkynetClient","genKeyPairFromSeed","privateKey","publicKey","dataKey","Main","unstoppableUsername","walletAddress","userLogOut","setPosts","imgData","setImgData","fetchData","files","reader","FileReader","addEventListener","result","readAsDataURL","alert","uploadFile","dataImage","imgLink","skylink","getSkylinkUrl","skylinkUrl","obj","getTime","db","getJSON","data","unshift","setJSON","window","location","reload","date","Date","day","getDate","monthName","getMonth","year","getFullYear","fontWeight","paddingLeft","backgroundColor","endIcon","substring","dummy","Login","setAvatar","unstoppableDomainLogin","setAccount","avatarType","createRef","name","select","label","ref","MenuItem","noImageProfile","NavBar","logo","Link","to","Profile","startIcon","locked","MemeCompetion","postsArr","text","img","Home","history","useHistory","push","ProfileComponent","MemeCompetionComponent","App","setWalletAddress","setUnstoppableUsername","getUser","localStorage","getItem","getWAddress","unstoppableDomaiInstance","UAuth","clientID","redirectUri","scope","loginWithPopup","user","setItem","idToken","sub","wallet_address","removeItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb50f7b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { CircularProgress, Typography, Box } from '@material-ui/core'\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <div\n      style={{\n        height: 'auto',\n        textAlign: 'center',\n        justifyContent: 'center',\n        paddingTop: '5rem',\n      }}\n    >\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress\n          variant=\"determinate\"\n          {...props}\n          style={{ width: '200px', height: '200px' }}\n        />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n            style={{ fontSize: '1rem' }}\n          >\n            {`${Math.round(props.value)}%`}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nCircularProgressWithLabel.protoTypes = {\n  value: PropTypes.number.isRequired,\n}\n\nexport default function CircularStatic() {\n  const [progress, setPogress] = useState(10)\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPogress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 10,\n      )\n    }, 800)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return <CircularProgressWithLabel value={progress} />\n}\n","import React, { useState } from 'react'\nimport { FiShare } from 'react-icons/fi'\nimport { AiOutlineRetweet, AiOutlineHeart, AiFillHeart } from 'react-icons/ai'\nimport { FaRegComment } from 'react-icons/fa'\nimport {\n  CardContent,\n  Grid,\n  Card,\n  Container,\n  CardHeader,\n  Avatar,\n  Typography,\n} from '@material-ui/core'\nimport CircularStatic from '../commons/CircularProgressWithLabel'\nimport './tweet.css'\n\nconst Tweet = ({ posts }) => {\n  console.log('🚀 ~ file: tweet.js ~ line 18 ~ Tweet ~ posts', posts)\n  const [like, setLike] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const likeHandler = () => {\n    if (like === false) {\n      setLike(true)\n    } else if (like === true) {\n      setLike(false)\n    }\n  }\n\n  return (\n    <Container>\n      <div className=\"root\">\n        {loading ? (\n          <CircularStatic />\n        ) : (\n          <div>\n            <Grid container style={{ display: 'table' }}>\n              {posts && posts?.length ? (\n                posts.map((post, index) => (\n                  <div className=\"each-card\" key={index}>\n                    <Card className=\"card\">\n                      <CardHeader\n                        avatar={\n                          <Avatar\n                            alt=\"profile\"\n                            src={\n                              post.avatar\n                                ? post.avatar\n                                : 'https://avatars.githubusercontent.com/u/10853211?v=4'\n                            }\n                            className=\"small\"\n                          />\n                        }\n                        title={post.author ? post.author : 'MemeDao'}\n                        subheader={\n                          post.timeCreated ? post.timeCreated : 'March 25, 2022'\n                        }\n                      />\n\n                      <CardContent className=\"card-content\">\n                        <Typography variant=\"body2\">\n                          {post.description}\n                        </Typography>\n                        <br />\n                        {post.image ? (\n                          <img\n                            src={post.image}\n                            alt=\"tweets\"\n                            style={{ width: '95%' }}\n                          />\n                        ) : (\n                          ' '\n                        )}\n                      </CardContent>\n\n                      {/* BOTTTOM */}\n                      <div id=\"nav-bottom-post\">\n                        <div id=\"box-comment-number\">\n                          <span className=\"comment\" id=\"nav-icon-box\">\n                            <FaRegComment />\n                          </span>\n                          <p id=\"comment-tweet\"> {0} </p>\n                        </div>\n                        <span className=\"retweet\" id=\"nav-icon-box\">\n                          <AiOutlineRetweet />\n                        </span>\n                        <div id=\"box-like-number\">\n                          <span\n                            // onClick={likeHandler}\n                            className=\"like\"\n                            id=\"nav-icon-box\"\n                          >\n                            {like === true ? (\n                              <AiFillHeart id=\"red-heart\" />\n                            ) : (\n                              <AiOutlineHeart />\n                            )}\n                          </span>\n                          <span id=\"like-number\">\n                            {like === true ? parseInt(post.likeNumber) + 1 : 0}\n                          </span>\n                        </div>\n                        <span className=\"share\" id=\"nav-icon-box\">\n                          <FiShare />\n                        </span>\n                        {/* <span className=\"analytic\" id=\"nav-icon-box\">\n                          <SiGoogleanalytics />\n                        </span> */}\n                      </div>\n                    </Card>\n                  </div>\n                ))\n              ) : (\n                <h2>No Memes Yet...</h2>\n              )}\n            </Grid>\n          </div>\n        )}\n      </div>\n\n      {/* <div id=\"tweet-box\">\n        <div id=\"profile-tweet\">\n          <img\n            src=\"https://avatars.githubusercontent.com/u/79016171?s=400&u=9376daf7bc67c804b89790ffc455fb5981c6d369&v=4\"\n            alt=\"profile\"\n            id=\"image-profile\"\n          />\n        </div>\n\n        <div id=\"box-tweet\">\n          <div id=\"name-id\">\n            <span id=\"flex-tweet\">\n              <p id=\"tweet-name\">ali turkaman</p>\n              <p id=\"tweet-id\">@ATurkaman . </p>\n              <p id=\"tweet-date\">Aug 10</p>\n            </span>\n\n            <span id=\"span-more\">\n              <CgMoreAlt />\n            </span>\n          </div>\n\n          <div id=\"post-box\">\n            <p id=\"text-tweet\"> {props.tweet} </p>\n          </div>\n\n          <div id=\"nav-bottom-post\">\n            <div id=\"box-comment-number\">\n              <span className=\"comment\" id=\"nav-icon-box\">\n                <FaRegComment />\n              </span>\n              <p id=\"comment-tweet\"> {props.comment} </p>\n            </div>\n            <span className=\"retweet\" id=\"nav-icon-box\">\n              <AiOutlineRetweet />\n            </span>\n            <div id=\"box-like-number\">\n              <span onClick={likeHandler} className=\"like\" id=\"nav-icon-box\">\n                {like === true ? (\n                  <AiFillHeart id=\"red-heart\" />\n                ) : (\n                  <AiOutlineHeart />\n                )}\n              </span>\n              <span id=\"like-number\">\n                {like === true\n                  ? parseInt(props.likeNumber) + 1\n                  : props.likeNumber}\n              </span>\n            </div>\n            <span className=\"share\" id=\"nav-icon-box\">\n              <FiShare />\n            </span>\n            <span className=\"analytic\" id=\"nav-icon-box\">\n              <SiGoogleanalytics />\n            </span>\n          </div>\n        </div>\n      </div> */}\n    </Container>\n  )\n}\n\nexport default Tweet\n","import React, { useState, useEffect } from 'react'\nimport {\n  StylesProvider,\n  Container,\n  TextField,\n  IconButton,\n  Button,\n  Grid,\n  Card,\n} from '@material-ui/core'\nimport './PostTweet.css'\nimport { PhotoCamera } from '@material-ui/icons'\nimport ImageIcon from '@material-ui/icons/Image'\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch'\n\nfunction Post({\n  image,\n  setMessage,\n  message,\n  setImage,\n  createPost,\n  onChangePicture,\n  avatar,\n}) {\n  return (\n    <StylesProvider injectFirst>\n      <Container style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n        <Card className=\"card-post\">\n          <Grid container>\n            <Grid item xs={1} sm={1}>\n              <img\n                src={`https://avatars.dicebear.com/api/avataaars/${avatar}.svg?background=%230000ff`}\n                alt=\"img-profile\"\n                id=\"person\"\n              />\n            </Grid>\n            <Grid item xs={11} sm={11}>\n              <form className=\"form\" noValidate autoComplete=\"off\">\n                <h3>\n                  {message ? (\n                    ''\n                  ) : (\n                    <p>Share your memes and let the world know your talent</p>\n                  )}\n                </h3>\n\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  className=\"input-form\"\n                  placeholder=\"\"\n                  defaultValue=\"\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  multiline\n                  minRows={4}\n                  required\n                />\n                {image ? (\n                  <img\n                    src={URL.createObjectURL(image)}\n                    alt=\"img-preview\"\n                    style={{ width: '100%' }}\n                  />\n                ) : (\n                  ''\n                )}\n                <br />\n                <label htmlFor=\"icon-button-phot\">\n                  <IconButton color=\"primary\" component=\"span\">\n                    <PhotoCamera />\n                    <ImageIcon />\n                    <ImageSearchIcon />\n                  </IconButton>\n                </label>\n                <input\n                  accept=\"image/*\"\n                  className=\"input\"\n                  id=\"icon\"\n                  defaultValue={image}\n                  onChange={(e) => onChangePicture(e)}\n                  // onChange={(e) => setImage(e.target.files[0]) }\n                  type=\"file\"\n                />\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={createPost}\n                  className=\"post-btn\"\n                >\n                  Post\n                </Button>\n              </form>\n            </Grid>\n          </Grid>\n        </Card>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default Post\n","export default __webpack_public_path__ + \"static/media/dummy.23dda95a.png\";","import React, { useState, useEffect } from 'react'\nimport './main.css'\nimport Tweet from '../tweet/tweet'\nimport PostTweet from '../post-tweet/PostTweet'\nimport { SkynetClient, genKeyPairFromSeed } from 'skynet-js'\nimport dummy from '../images/dummy.png'\nimport VerifiedUserSharpIcon from '@material-ui/icons/VerifiedUserSharp'\nimport { Button } from '@material-ui/core'\nconst portal = 'https://siasky.net/'\nconst client = new SkynetClient(portal)\nconst SEEDPHASE = 'seedphase'\nconst { privateKey, publicKey } = genKeyPairFromSeed(SEEDPHASE)\nconst dataKey = 'datakey'\n\nconst Main = ({ unstoppableUsername, avatar, walletAddress, userLogOut }) => {\n  console.log(\n    '🚀 ~ file: main.js ~ line 16 ~ Main ~ unstoppableUsername, avatar, walletAddress, userLogOut',\n    unstoppableUsername,\n    avatar,\n    walletAddress,\n    userLogOut,\n  )\n  const [message, setMessage] = useState('')\n  const [image, setImage] = useState('')\n  const [posts, setPosts] = useState('')\n  const [imgData, setImgData] = useState('')\n\n  useEffect(() => {\n    if (unstoppableUsername) {\n    }\n    fetchData()\n  }, [])\n\n  const onChangePicture = async (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0])\n      const reader = new FileReader()\n      reader.addEventListener('load', () => {\n        setImgData(reader.result)\n      })\n      reader.readAsDataURL(e.target.files[0])\n    }\n  }\n\n  const createPost = async () => {\n    if (!imgData && !message) {\n      alert('A photo & a description are required!')\n    } else {\n      const dataImage = await client.uploadFile(image)\n      const imgLink = dataImage.skylink\n\n      console.log(\n        'unstoppableUsername, avatar, walletAddress, message, imgData, image',\n        unstoppableUsername,\n        avatar,\n        walletAddress,\n        message,\n        imgData,\n        image,\n      )\n\n      // skylinks start with `sia://` and don't specify a portal URL\n      // generate URLs for our current portal though.\n      const skylinkUrl = await client.getSkylinkUrl(imgLink)\n      const obj = {\n        image: skylinkUrl,\n        description: message,\n        avatar: `https://avatars.dicebear.com/api/avataaars/${avatar}.svg?background=%230000ff`,\n        author: unstoppableUsername,\n        walletAddress: walletAddress,\n        timeCreated: getTime(),\n      }\n      let { data } = await client.db.getJSON(publicKey, dataKey)\n      if (data?.length) {\n        data.unshift(obj)\n      } else {\n        data = [obj]\n      }\n      // add data to skynet\n      const result = await client.db.setJSON(privateKey, dataKey, data)\n      window.location.reload()\n    }\n  }\n\n  const getTime = () => {\n    let monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ]\n\n    let date = new Date()\n\n    let day = date.getDate()\n\n    let monthIndex = date.getMonth()\n    let monthName = monthNames[monthIndex]\n\n    let year = date.getFullYear()\n    return `${day}-${monthName}-${year}`\n  }\n\n  const fetchData = async () => {\n    let { data } = await client.db.getJSON(publicKey, dataKey)\n    setPosts(data)\n  }\n\n  return (\n    <div id=\"container-main\">\n      <div className=\"container-flex\">\n        <p\n          style={{\n            fontSize: '1.1rem',\n            fontWeight: '500',\n            color: ' #ba03c4',\n            paddingLeft: '3rem',\n          }}\n        >\n          Welcome <span>{unstoppableUsername}</span>\n        </p>\n        <div>\n          <Button\n            variant=\"contained\"\n            style={{ backgroundColor: '#c506e8', color: 'white' }}\n            color=\"secondary\"\n            endIcon={<VerifiedUserSharpIcon />}\n          >\n            {walletAddress\n              ? `${walletAddress.substring(0, 5)}...${walletAddress.substring(\n                  32,\n                )}`\n              : ''}\n          </Button>\n          <Button onClick={() => userLogOut()}>Logout</Button>\n        </div>\n      </div>\n\n      <PostTweet\n        image={image}\n        message={message}\n        setMessage={setMessage}\n        setImage={setImage}\n        createPost={createPost}\n        onChangePicture={onChangePicture}\n        avatar={avatar}\n      />\n\n      <Tweet posts={posts} />\n      <img src={dummy} alt=\"dummy\" style={{ width: '100%' }} />\n    </div>\n  )\n}\n\nexport default Main\n","export default __webpack_public_path__ + \"static/media/noImageProfile.5d697394.jpg\";","import React, { createRef } from 'react'\nimport {\n  Button,\n  Container,\n  StylesProvider,\n  TextField,\n  MenuItem,\n} from '@material-ui/core'\nimport noImageProfile from '../images/noImageProfile.jpg'\nimport './Login.css'\n\nfunction Login({ setAvatar, avatar, setAccount, unstoppableDomainLogin }) {\n  const avatarType = createRef()\n  \n  return (\n    <StylesProvider injectFirst>\n      <br />\n      <Container className=\"login-container\">\n        <center>\n          <div className=\"login-text-field\">\n            <TextField\n              fullWidth\n              name=\"profileType\"\n              select\n              label=\"Select Avatar\"\n              variant=\"outlined\"\n              onChange={(e) => setAvatar(e.target.value)}\n              defaultValue=\"\"\n              ref={avatarType}\n            >\n              <MenuItem value=\"micah\">Micah</MenuItem>\n              <MenuItem value=\"avataaars\">Avataaars</MenuItem>\n              <MenuItem value=\"human\">Human</MenuItem>\n              <MenuItem value=\"male\">Male</MenuItem>\n              <MenuItem value=\"female\">Female</MenuItem>\n              <MenuItem value=\"bottts\">Bottts</MenuItem>\n              <MenuItem value=\"identicon\">Identicon</MenuItem>\n              <MenuItem value=\"jdenticon\">Jdenticon</MenuItem>\n            </TextField>\n          </div>\n\n          {avatar ? (\n            <img\n              src={`https://avatars.dicebear.com/api/${avatar}/seed.svg?background=%230000ff`}\n              alt=\"img-profile\"\n              className=\"login-profile-img\"\n            />\n          ) : (\n            <img\n              src={noImageProfile}\n              alt=\"profile\"\n              className=\"login-profile-img\"\n            />\n          )}\n          <br />\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            className=\"mint-btn\"\n            onClick={() => unstoppableDomainLogin()}\n          >\n            Connect with Unstoppable Domains\n          </Button>\n        </center>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default Login\n","export default __webpack_public_path__ + \"static/media/logo.df9b07f8.png\";","import './navbar.css'\nimport { Link } from 'react-router-dom'\nimport {\n  BiHomeCircle,\n  BiMessageSquareDetail,\n  BiBookmark,\n  BiUserVoice,\n} from 'react-icons/bi'\nimport { Button } from '@material-ui/core'\nimport { IoNotificationsOutline } from 'react-icons/io5'\nimport { RiContactsFill } from 'react-icons/ri'\nimport { CgMoreO } from 'react-icons/cg'\nimport logo from '../images/logo.png'\n\nconst NavBar = ({ unstoppableUsername, avatar, walletAddress }) => {\n  return (\n    <div id=\"container-nav\">\n      <div id=\"nav-up\">\n        <img src={logo} alt=\"Dao logo\" className=\"logo\" />\n\n        <button id=\"row\">\n          <BiHomeCircle id=\"home-icon\" />\n          <Button component={Link} to=\"/\" id=\"nav-title\">\n            Home\n          </Button>\n        </button>\n\n        <button id=\"row\">\n          <IoNotificationsOutline id=\"home-icon\" />\n          <Button component={Link} to=\"/follow-nfts\" id=\"nav-title\">\n            FollowNFTs\n          </Button>\n          <p id=\"nav-title\"></p>\n        </button>\n\n        <button id=\"row\">\n          <BiUserVoice id=\"home-icon\" />\n          <Button component={Link} to=\"/\" id=\"nav-title\">\n            Competion\n          </Button>\n        </button>\n\n        <button id=\"row\">\n          <BiMessageSquareDetail id=\"home-icon\" />\n          <Button component={Link} to=\"/\" id=\"nav-title\">\n            Collections\n          </Button>\n        </button>\n\n        <button id=\"row\">\n          <RiContactsFill id=\"home-icon\" />\n          <Button component={Link} to=\"/follow-nfts\" id=\"nav-title\">\n            My Profiles\n          </Button>\n        </button>\n\n        <button id=\"row\">\n          <BiBookmark id=\"home-icon\" />\n          <p id=\"nav-title\">Mirrors</p>\n        </button>\n        <button id=\"row\">\n          <CgMoreO id=\"home-icon\" />\n          <p id=\"nav-title\">More</p>\n        </button>\n      </div>\n\n      <div id=\"bottom-nav\">\n        <span id=\"user-box\">\n          <img\n            src={`https://avatars.dicebear.com/api/avataaars/${avatar}.svg?background=%230000ff`}\n            alt=\"img-profile\"\n            id=\"person\"\n          />\n          <span>\n            <p id=\"name\">{unstoppableUsername}</p>\n            {/* <p id=\"id\">@Electrone</p> */}\n          </span>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/locked.d6a42fb5.png\";","import React from 'react'\nimport { Button, Container, StylesProvider } from '@material-ui/core'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport './Profile.css'\nimport locked from '../images/locked.png'\nfunction Profile() {\n  return (\n    <StylesProvider injectFirst>\n      <div id=\"container-main\">\n        <Container className=\"profile-container\">\n          <img\n            src=\"https://avatars.githubusercontent.com/u/38871879?v=4\"\n            alt=\"profile\"\n            className=\"profile-img\"\n          />\n          <h2>MemeDao(Private)</h2> <br />\n          <h3>Followers 444</h3>\n          <br />\n          <Button\n            startIcon={<AddCircleIcon />}\n            variant=\"contained\"\n            className=\"follow-btn\"\n          >\n            Follow\n          </Button>\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            className=\"mint-btn\"\n            startIcon={<MonetizationOnIcon />}\n          >\n            Mint FollowNFT 0.2eth\n          </Button>\n          <br />\n          <br />\n          <Button variant=\"contained\" className=\"followers-only-btn\">\n            Only followers can see and comment on MEMEDAO(PRIVATE)'s\n            publications\n          </Button>\n          <img src={locked} alt=\"locked\" className=\"locked-img\" />\n          <img src={locked} alt=\"locked\" className=\"locked-img\" />\n          <img src={locked} alt=\"locked\" className=\"locked-img\" />\n        </Container>\n      </div>\n    </StylesProvider>\n  )\n}\n\nexport default Profile\n","import React, { useState, useEffect } from 'react';\nimport PostTweet from '../post-tweet/PostTweet';\nimport { FiShare } from 'react-icons/fi';\nimport { AiOutlineRetweet, AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { FaRegComment } from 'react-icons/fa';\nimport {\n  CardContent,\n  Grid,\n  Card,\n  Container,\n  CardHeader,\n  Avatar,\n  Typography,\n  StylesProvider,\n} from '@material-ui/core';\n\nimport CircularStatic from '../commons/CircularProgressWithLabel';\nimport locked from '../images/locked.png';\nimport './MemeCompetion.css';\nimport { SkynetClient, genKeyPairFromSeed } from 'skynet-js';\nconst portal = 'https://siasky.net/';\nconst client = new SkynetClient(portal);\nconst SEEDPHASE = 'seedphase';\nconst { privateKey, publicKey } = genKeyPairFromSeed(SEEDPHASE);\nconst dataKey = 'datakey';\n\nconst MemeCompetion = ({ post = { like: '12' } }) => {\n  const [like, setLike] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState('');\n  const [posts, setPosts] = useState('');\n  const [imgData, setImgData] = useState('');\n  const [follow, setFollow] = useState(true);\n\n  const followHandler = () => {\n    if (follow === true) {\n      setFollow(false);\n    } else if (follow === false) {\n      setFollow(true);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // console.log(' imgData',imgData )\n  const onChangePicture = async (e) => {\n    if (e.target.files[0]) {\n      console.log('picture: ', e.target.files);\n      setImage(e.target.files[0]);\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        setImgData(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const createPost = async () => {\n    console.log('eee', imgData, message);\n    // const { skylink } = await client.uploadFile(imgData)\n    const dataImage = await client.uploadFile(image);\n    const imgLink = dataImage.skylink;\n\n    // skylinks start with `sia://` and don't specify a portal URL\n    // generate URLs for our current portal though.\n    const skylinkUrl = await client.getSkylinkUrl(imgLink);\n\n    const obj = {\n      image: skylinkUrl,\n      description: message,\n    };\n    let { data } = await client.db.getJSON(publicKey, dataKey);\n\n    if (data?.length) {\n      data.unshift(obj);\n    } else {\n      data = [obj];\n    }\n    // add data to skynet\n    const result = await client.db.setJSON(privateKey, dataKey, data);\n    window.location.reload();\n    // call here\n    // console.log('🚀🚀🚀  result', result)\n    // if(result) {\n\n    // }\n  };\n\n  const fetchData = async () => {\n    let { data } = await client.db.getJSON(publicKey, dataKey);\n    setPosts(data);\n  };\n  const postsArr = [\n    {\n      avatar: 'https://avatars.githubusercontent.com/u/10853211?v=4',\n      text: 'Here is my meme, the lord of Memes!!',\n      img:\n        'https://images.unsplash.com/photo-1523406909961-95040afc761a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',\n    },\n    {\n      avatar: 'https://avatars.githubusercontent.com/u/10853211?v=4',\n      text: 'Here is my meme, the lord of Memes!!',\n      img:\n        'https://images.unsplash.com/photo-1523406909961-95040afc761a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',\n    },\n    {\n      avatar: 'https://avatars.githubusercontent.com/u/10853211?v=4',\n      text: 'Here is my meme, the lord of Memes!!',\n      img:\n        'https://images.unsplash.com/photo-1523406909961-95040afc761a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',\n    },\n    {\n      avatar: 'https://avatars.githubusercontent.com/u/10853211?v=4',\n      text: 'Here is my meme, the lord of Memes!!',\n      img:\n        'https://images.unsplash.com/photo-1523406909961-95040afc761a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',\n    },\n  ];\n\n  return (\n    <div id=\"container-main\">\n      <div className=\"each-card\">\n        <Card className=\"card\">\n          <CardHeader\n            avatar={\n              <Avatar\n                alt=\"profile\"\n                src=\"https://avatars.githubusercontent.com/u/10853211?v=4\"\n                className=\"small\"\n              />\n            }\n            title=\"MemeDao (private)\"\n            subheader=\"March 25, 2022\"\n          />\n\n          <CardContent className=\"card-content\">\n            <Typography variant=\"body2\">\n              MEME COMPETITION This impressive paella is a perfect party dish and a fun meal to cook\n              together with your guests. Add 1 cup of frozen peas along with the mussels, if you\n              like.\n            </Typography>\n          </CardContent>\n          {/* BOTTTOM */}\n          <div id=\"nav-bottom-post\">\n            <div id=\"box-comment-number\">\n              <span className=\"comment\" id=\"nav-icon-box\">\n                <FaRegComment />\n              </span>\n              <p id=\"comment-tweet\"> {0} </p>\n            </div>\n            <span className=\"retweet\" id=\"nav-icon-box\">\n              <AiOutlineRetweet />\n            </span>\n            <div id=\"box-like-number\">\n              <span\n                // onClick={likeHandler}\n                className=\"like\"\n                id=\"nav-icon-box\"\n              >\n                {like === true ? <AiFillHeart id=\"red-heart\" /> : <AiOutlineHeart />}\n              </span>\n              <span id=\"like-number\">{like === true ? parseInt(post.likeNumber) + 1 : 0}</span>\n            </div>\n            <span className=\"share\" id=\"nav-icon-box\">\n              <FiShare />\n            </span>\n            {/* <span className=\"analytic\" id=\"nav-icon-box\">\n                          <SiGoogleanalytics />\n                        </span> */}\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"comments-meme\">\n        {/* post Form */}\n        <PostTweet\n          image={image}\n          setMessage={setMessage}\n          setImage={setImage}\n          createPost={createPost}\n          onChangePicture={onChangePicture}\n        />\n        <Container>\n          {loading ? (\n            <CircularStatic />\n          ) : (\n            <div>\n              <Grid container>\n                {postsArr && postsArr?.length ? (\n                  postsArr.map((post, index) => (\n                    <div className=\"each-card-meme\" key={index}>\n                      <Card className=\"card\" key={index}>\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              alt=\"profile\"\n                              src=\"https://avatars.githubusercontent.com/u/10853211?v=4\"\n                              className=\"small\"\n                            />\n                          }\n                          title=\"MemeDao (public)\"\n                          subheader=\"March 25, 2022\"\n                        />\n\n                        <CardContent className=\"card-content\">\n                          <Typography variant=\"body2\">\n                            This impressive paella is a perfect party dish and a fun meal to cook\n                            together with your guests. Add 1 cup of frozen peas along with the\n                            mussels, if you like.\n                            {post.description}\n                          </Typography>\n                          <br />\n                          {post.img ? (\n                            <img src={post.img} alt=\"tweets\" style={{ width: '50%' }} />\n                          ) : (\n                            ' '\n                          )}\n                        </CardContent>\n\n                        {/* BOTTTOM */}\n                        <div id=\"nav-bottom-post\">\n                          <div id=\"box-comment-number\">\n                            <span className=\"comment\" id=\"nav-icon-box\">\n                              <FaRegComment />\n                            </span>\n                            <p id=\"comment-tweet\"> {0} </p>\n                          </div>\n                          <span className=\"retweet\" id=\"nav-icon-box\">\n                            <AiOutlineRetweet />\n                          </span>\n                          <div id=\"box-like-number\">\n                            <span\n                              // onClick={likeHandler}\n                              className=\"like\"\n                              id=\"nav-icon-box\"\n                            >\n                              {like === true ? <AiFillHeart id=\"red-heart\" /> : <AiOutlineHeart />}\n                            </span>\n                            <span id=\"like-number\">\n                              {like === true ? parseInt(post.likeNumber) + 1 : 0}\n                            </span>\n                          </div>\n                          <span className=\"share\" id=\"nav-icon-box\">\n                            <FiShare />\n                          </span>\n                        </div>\n                      </Card>\n                    </div>\n                  ))\n                ) : (\n                  <h2>No Comments Yet...</h2>\n                )}\n              </Grid>\n            </div>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default MemeCompetion;\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Main from './components/main/main'\nimport Login from './components/login/Login'\nimport NavBar from './components/navBar/navbar'\nimport Right from './components/right/right'\nimport Profile from './components/profile/Profile'\nimport MemeCompetion from './components/meme-competion/MemeCompetion'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom'\nimport UAuth from '@uauth/js'\n\nconst Home = ({ unstoppableUsername, avatar, userLogOut, walletAddress }) => {\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!unstoppableUsername) {\n      history.push('/login')\n    }\n  }, [unstoppableUsername, history])\n  return (\n    <div id=\"container\">\n      <div id=\"nav-box\">\n        <NavBar\n          avatar={avatar}\n          unstoppableUsername={unstoppableUsername}\n          walletAddress={walletAddress}\n        />\n      </div>\n      <Main\n        avatar={avatar}\n        unstoppableUsername={unstoppableUsername}\n        userLogOut={userLogOut}\n        walletAddress={walletAddress}\n      />\n    </div>\n  )\n}\n\nconst ProfileComponent = ({ avatar, unstoppableUsername }) => {\n  return (\n    <div id=\"container\">\n      <div id=\"nav-box\">\n        <NavBar avatar={avatar} unstoppableUsername={unstoppableUsername} />\n      </div>\n      <Profile />\n    </div>\n  )\n}\n\nconst MemeCompetionComponent = () => {\n  return (\n    <div id=\"container\">\n      <div id=\"nav-box\">\n        <NavBar />\n      </div>\n      <MemeCompetion />\n    </div>\n  )\n}\n\nconst App = () => {\n  const [avatar, setAvatar] = useState('')\n  const [walletAddress, setWalletAddress] = useState('')\n  const [unstoppableUsername, setUnstoppableUsername] = useState('')\n\n  useEffect(() => {\n    const getUser = localStorage.getItem('user')\n    const getWAddress = localStorage.getItem('walletAddress')\n    console.log('get getUser,getWAddress', getUser, getWAddress)\n    setUnstoppableUsername(getUser)\n    setWalletAddress(getWAddress)\n  }, [])\n\n  const unstoppableDomaiInstance = new UAuth({\n    clientID: '97347d9d-eb53-46c6-ac5c-a8a2f9de6ae5',\n    redirectUri: 'https://meme-dao.netlify.app/',\n    scope: 'openid wallet',\n  })\n\n  const unstoppableDomainLogin = async () => {\n    const user = await unstoppableDomaiInstance.loginWithPopup()\n    if (user) {\n      localStorage.setItem('user', user.idToken.sub)\n      localStorage.setItem('walletAddress', user.idToken.wallet_address)\n      setUnstoppableUsername(user.idToken.sub)\n      setWalletAddress(user.idToken.wallet_address)\n    }\n  }\n  const userLogOut = () => {\n    localStorage.removeItem('user')\n    setUnstoppableUsername('')\n    setWalletAddress('')\n  }\n\n  return (\n    <Router>\n      {unstoppableUsername ? (\n        <Switch>\n          <Route exact path=\"/\">\n            <Home\n              avatar={avatar}\n              unstoppableUsername={unstoppableUsername}\n              walletAddress={walletAddress}\n              userLogOut={userLogOut}\n            />\n          </Route>\n          <Route exact path=\"/follow-nfts\">\n            <ProfileComponent\n              avatar={avatar}\n              unstoppableUsername={unstoppableUsername}\n            />\n          </Route>\n          <Route exact path=\"/competion\">\n            <MemeCompetionComponent />\n          </Route>\n        </Switch>\n      ) : (\n        <Route>\n          <Login\n            setAvatar={setAvatar}\n            avatar={avatar}\n            unstoppableDomainLogin={unstoppableDomainLogin}\n            userLogOut={userLogOut}\n          />\n        </Route>\n      )}\n    </Router>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}